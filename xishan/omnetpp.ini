[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 1s
**.cmdenv-log-level = info

ned-path = .
image-path = ../../images

# network = RSUExampleScenario
network = RSUXISHANScenario

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = false

sim-time-limit = 50s
#sim-time-limitlll = 100
*.**.finish_time  = 100
*.**.record_file = false
num-rngs = 20


**.scalar-recording = true
**.vector-recording = true

**.debug = false
**.coreDebug = false

*.playgroundSizeX = 7500m
*.playgroundSizeY = 5000m
*.playgroundSizeZ = 50m


##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = true

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false
*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.ignoreGuiCommands = false

*.manager.updateInterval = 1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
# *.manager.launchConfig = xmldoc("erlangen.launchd.xml")
 *.manager.launchConfig = xmldoc("xishan.launchd.xml")


##########################################################
#            11p specific parameters   New Version                  #
#                                                        #
#                    NIC-Settings                        #
##########################################################
#*.connectionManager.sendDirect = true
#*.connectionManager.maxInterfDist = 2600m
#*.connectionManager.drawMaxIntfDist = false
#
#*.**.nic.mac1609_4.useServiceChannel = false
#
#*.**.nic.mac1609_4.txPower = 20mW
#*.**.nic.mac1609_4.bitrate = 6Mbps
#*.**.nic.phy80211p.minPowerLevel = -110dBm
#
#*.**.nic.phy80211p.useNoiseFloor = true
#*.**.nic.phy80211p.noiseFloor = -98dBm
#
#*.**.nic.phy80211p.decider = xmldoc("config.xml")
#*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
#*.**.nic.phy80211p.usePropagationDelay = true
#
#*.**.nic.phy80211p.antenna = xmldoc("antenna.xml", "/root/Antenna[@id='monopole']")
#*.node[*].nic.phy80211p.antennaOffsetY = 0 m
#*.node[*].nic.phy80211p.antennaOffsetZ = 1.895 m


##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

#*.dc**.nic.mac1609_4.txPower = 100mW

*.**.nic.mac1609_4.txPower = 20mW

#*.dc**.nic.mac1609_4.txPower = 100mW

*.**.nic.mac1609_4.bitrate = 6Mbps
#*.**.nic.phy80211p.sensitivity = -89dBm
#*.**.nic.phy80211p.minPowerLevel = -110dBm

#*.**.nic.phy80211p.useThermalNoise = true
#*.**.nic.phy80211p.thermalNoise = -110dBm


*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

*.dc**.nic.phy80211p.useNoiseFloor = false

*.**.nic.phy80211p.useNoiseFloor = true

#*.dc**.nic.phy80211p.useNoiseFloor = false

*.**.nic.phy80211p.noiseFloor = -98dBm
*.**.nic.phy80211p.minPowerLevel = -110dBm

*.**.nic.phy80211p.antenna = xmldoc("antenna.xml", "/root/Antenna[@id='monopole']")
*.node[*].nic.phy80211p.antennaOffsetY = 0 m
*.node[*].nic.phy80211p.antennaOffsetZ = 1.895 m

##########################################################
#                    CV                        #
##########################################################



#*.node[*].applType = "TraCIDemo11p"
*.node[*].applType = "Collaborate"
#*.node[*].applType = "TaskOffloadRSU"
#*.node[*].applType = "CollaborateTask"
*.node[*].appl.headerLength = 80 bit
*.node[*].appl.sendBeacons = false
*.node[*].appl.dataOnSch = false
*.node[*].appl.beaconInterval = 1s


         # 仿真总时间
*.node[*].appl.delay_limit = 0.6    # 任务deadline
*.node[*].appl.m = 20               # replica中[0, 1]量化区间数
*.node[*].appl.x_low = 0.24         # single中x-
*.node[*].appl.x_high = 0.24        # single中x+
*.node[*].appl.cur_ucb = 2          # 单次运行时single中算法类型，(01234) = (ucb vucb avucb aucb random)
*.node[*].appl.K = 2                # 单此运行时replica中的任务复制数

#*.rsu[*].appl.delay_limit = 0.6    # 任务deadline
#*.rsu[*].appl.m = 20               # replica中[0, 1]量化区间数
#*.rsu[*].appl.x_low = 0.24         # single中x-
#*.rsu[*].appl.x_high = 0.24        # single中x+
#*.rsu[*].appl.cur_ucb = 2          # 单次运行时single中算法类型，(01234) = (ucb vucb avucb aucb random)
#*.rsu[*].appl.K = 2                # 单此运行时replica中的任务复制数



##########################################################
#                    EC                       #
##########################################################



#*.ec[*].applType = "TraCIDemo11p"
*.ec[*].applType = "Collaborate"
#*.ec[*].applType = "TaskOffloadRSU"
#*.ec[*].applType = "CollaborateTask"
*.ec[*].appl.headerLength = 80 bit
*.ec[*].appl.sendBeacons = false
*.ec[*].appl.dataOnSch = false
*.ec[*].appl.beaconInterval = 1s


         # 仿真总时间
*.ec[*].appl.delay_limit = 0.6    # 任务deadline
*.ec[*].appl.m = 20               # replica中[0, 1]量化区间数
*.ec[*].appl.x_low = 0.24         # single中x-
*.ec[*].appl.x_high = 0.24        # single中x+
*.ec[*].appl.cur_ucb = 2          # 单次运行时single中算法类型，(01234) = (ucb vucb avucb aucb random)
*.ec[*].appl.K = 2                # 单此运行时replica中的任务复制数

#*.rsu[*].appl.delay_limit = 0.6    # 任务deadline
#*.rsu[*].appl.m = 20               # replica中[0, 1]量化区间数
#*.rsu[*].appl.x_low = 0.24         # single中x-
#*.rsu[*].appl.x_high = 0.24        # single中x+
#*.rsu[*].appl.cur_ucb = 2          # 单次运行时single中算法类型，(01234) = (ucb vucb avucb aucb random)
#*.rsu[*].appl.K = 2                # 单此运行时replica中的任务复制数

##########################################################
#                      Mobility                          #
##########################################################
#*.node[*].veinsmobilityType=


#*.ec[*].veinsmobilityType.debug = true
*.ec[1].mobility.x = 2431
*.ec[1].mobility.y = 2140
*.ec[1].mobility.z = 8

*.ec[0].mobility.x = 2531
*.ec[0].mobility.y = 2199
*.ec[0].mobility.z = 8
#*.ec[*0].veinsmobility.accidentCount = 1
#*.ec[*0].veinsmobility.accidentStart = 75s
#*.ec[*0].veinsmobility.accidentDuration = 50s



##########################################################
#                       DC SETTINGS                     #
#                                                        #
#                                                        #
##########################################################
*.dc[0].mobility.x = 2432
*.dc[0].mobility.y = 2199
*.dc[0].mobility.z = 8



*.dc[*].applType = "DCApp"
#*.dc[*].applType = "Collaborate"
#*.dc[*].applType = "TaskOffloadRSU"

#*.node[*].applType = "TaskOffload"
#*.node[*].appl.headerLength = 80 bit
#*.node[*].appl.sendBeacons = true
#*.node[*].appl.dataOnSch = false
#*.node[*].appl.beaconInterval = 1s

*.dc[*].appl.headerLength = 80 bit
*.dc[*].appl.sendBeacons = false
*.dc[*].appl.dataOnSch = false
*.dc[*].appl.beaconInterval = 1s
*.dc[*].appl.beaconUserPriority = 7
*.dc[*].appl.dataUserPriority = 5


##########################################################
#                      Mobility                          #
##########################################################
#*.node[*].veinsmobilityType=


#*.node[*].veinsmobilityType.debug = true
*.node[*].veinsmobility.x = 0
*.node[*].veinsmobility.y = 0
*.node[*].veinsmobility.z = 1.895
*.node[*0].veinsmobility.accidentCount = 1
*.node[*0].veinsmobility.accidentStart = 75s
*.node[*0].veinsmobility.accidentDuration = 50s

##########################################################
#                  GymConnection                         #
##########################################################
#*.node[*].veinsmobilityType=
#*.gym_connection.action_space = "gym.spaces.Discrete(8)"
*.gym_connection.action_space = "gym.spaces.Box(low=np.array([0,0,0.1,0,0], dtype=np.float32), high=np.array([200,1,10,20,200], dtype=np.float32))"

*.gym_connection.observation_space = "gym.spaces.Box(low=np.array([-np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf,-np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf,-np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf,-np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf], dtype=np.float32), high=np.array([np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf,np.inf, np.inf], dtype=np.float32))"



[Config WithoutChannelSwitching]

[Config WithChannelSwitching]
*.**.nic.mac1609_4.useServiceChannel = true
*.node[*].appl.dataOnSch = true
*.rsu[*].appl.dataOnSch = true
*.ec[*].appl.dataOnSch = true
*.dc[*].appl.dataOnSch = true

